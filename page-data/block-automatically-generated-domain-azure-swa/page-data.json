{"componentChunkName":"component---src-templates-blog-post-js","path":"/block-automatically-generated-domain-azure-swa/","webpackCompilationHash":"04c6abd57795f98d1695","result":{"data":{"site":{"siteMetadata":{"title":"Erwin Smit blog","author":"Erwin Smit"}},"markdownRemark":{"id":"93287471-9220-5537-9648-9d4b36f63617","html":"<p>Please note: This post applies for <a href=\"https://learn.microsoft.com/en-us/azure/static-web-apps/deploy-nextjs-hybrid\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hybrid Next.js Azure Static Web Apps</a></p>\n<p>Azure Static Web Apps automatically creates a domain like <code class=\"language-text\">blue-river-096abc21e.2.azurestaticapps.net</code>. Even when you have created a custom domain for your Azure Static Web App it’s not possible to <a href=\"https://techcommunity.microsoft.com/t5/apps-on-azure/is-it-possible-to-disable-the-default-url-assigned-to-the-azure/m-p/2017272\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">disable or block this domain</a>.</p>\n<p>In a current <strong>Sitecore JSS Next.js</strong> project we are applying IP restrictions on our custom domains, but these automatically generated URLs can’t be blocked using Web Application Firewall or Azure Frontdoor. So how do we make sure these URLs are not publicly accessible? </p>\n<p>Luckily with Next.js you can use <a href=\"https://nextjs.org/docs/advanced-features/middleware\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">middleware</a> for a while now. So my idea was to apply a redirect to the custom domain when I detect a <code class=\"language-text\">.azurestaticapps</code> host header. But, when you inspect all the headers on a request, no host header was present when an <a href=\"https://github.com/Azure/static-web-apps/issues/1012\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">azurestaticapps.net domain is used</a>. </p>\n<p>When you access the site using a custom domain, you DO get a header with the hostname in it. Using that you can create a redirect with a few lines of code in your _middleware.ts file:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> host <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x-forwarded-host'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> blockedHostRedirect <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">BLOCKED_HOST_REDIRECT</span> <span class=\"token operator\">||</span> <span class=\"token string\">'https://www.erwinsmit.com'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// When x-forwarded-host header is not set, a default URL is used (e.g. blue-river-096abc21e.2.azurestaticapps.net)</span>\n<span class=\"token comment\">// so redirect to blockedHostRedirect</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>host <span class=\"token operator\">&amp;&amp;</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">BLOCK_SWA_DEFAULT_HOST</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> NextResponse<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span>blockedHostRedirect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I like to switch features on or off using environment variables, <code class=\"language-text\">process.env.BLOCK_SWA_DEFAULT_HOST</code> is used to switch the redirect on or off.\n<code class=\"language-text\">process.env.BLOCKED_HOST_REDIRECT</code> is used for specifying a domain it should redirect to.</p>\n<p>There you go, using Nextjs middelware it is possible to block access to the automatically generated URLs. </p>","timeToRead":2,"frontmatter":{"title":"Block generated domains by Azure Static Web Apps","date":"February 22, 2023","spoiler":"Azure Static Web Apps creates automatically a domain like \"blue-river-096abc21e.2.azurestaticapps.net\", how can you block this domain on a Hybrid Next.js implementation?"},"fields":{"slug":"/block-automatically-generated-domain-azure-swa/","langKey":"en"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/block-automatically-generated-domain-azure-swa/","previous":{"fields":{"slug":"/caching-nextjs-public-directory/","langKey":"en","directoryName":"caching-nextjs-public-directory"},"frontmatter":{"title":"Add caching to Sitecore JSS Next.js public directory"}},"next":{"fields":{"slug":"/speed-up-sitecore-jss-nextjs-local-development/","langKey":"en","directoryName":"speed-up-sitecore-jss-nextjs-local-development"},"frontmatter":{"title":"Speed up Sitecore JSS Next.js local development"}},"translations":[],"translatedLinks":[]}}}